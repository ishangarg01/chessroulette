
    // // when the game starts i want to do something so i will use useEffect
    // useEffect(() => {
    //     if(!socket) {return;}
    //     if(!started) {return;}
        
    //     const startstream = async () => {
    //         const stream = await navigator.mediaDevices.getUserMedia({
    //             audio: false, 
    //             video: true
    //         });
    //         const offer = await peer.getOffer();
    //         if (offer && colour === "white") {
    //             // Sending the offer to the server via WebSocket
    //             socket.send(JSON.stringify({ 
    //                 type: OFFER, 
    //                 data: offer 
    //             }));
    //         }
    //         setMyStream(stream);
    //     }
    //     startstream();

    //     socket.onmessage = (event) => {
    //         const message = JSON.parse(event.data);
    //         switch(message.type) {
    //             case OFFER:
    //                 console.log("Offer recieved on black side?");
    //                 console.log(message.data);
    //                 const sendAnswer = async () => {
    //                     const answer = await peer.getAnswer(message.data);
    //                     if(answer) {
    //                         socket.send(JSON.stringify({
    //                             type: ANSWER,
    //                             data: answer
    //                         }));
    //                     }
    //                 };
    //                 sendAnswer();
    //                 break;
    //             case ANSWER:
    //                 console.log("Answer recieved on white side?");
    //                 console.log(message.data);
    //                 const setRemoteDescription = async () => {
    //                     await peer.setRemoteDescription(message.data);
    //                 }
    //                 setRemoteDescription();
    //                 addTracks();
    //                 break;
    //             default:
    //                 console.log("Unknown message type");
    //         }
    //     };
    //     return () => {
    //         // Clean up the message handler when the component unmounts or dependencies change
    //         socket.onmessage = null;
    //     };
    // }, [socket, started, colour]);

    // useEffect(() => {    
    // }, [myStream,socket, started, colour]);
